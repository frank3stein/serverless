{"version":3,"sources":["serviceWorker.ts","config.ts","auth/Auth.js","components/Callback.tsx","components/EditTodo.tsx","api/todos-api.ts","components/LogIn.tsx","components/NotFound.tsx","components/Todos.tsx","App.tsx","routing.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","apiEndpoint","concat","authConfig","domain","clientId","callbackUrl","Auth","history","Object","classCallCheck","this","auth0","WebAuth","clientID","redirectUri","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","authorize","_this","parseHash","err","authResult","accessToken","idToken","console","log","setSession","replace","alert","error","localStorage","setItem","expiresAt","expiresIn","Date","getTime","_this2","checkSession","error_description","removeItem","return_to","origin","Callback","UploadState","react_default","a","createElement","Dimmer","active","Loader","content","getTodos","_x","_getTodos","apply","arguments","_callee","response","regenerator_default","wrap","_context","prev","next","Axios","get","headers","Content-Type","Authorization","sent","data","abrupt","todos","stop","createTodo","_x2","_x3","_createTodo","_callee2","newTodo","_context2","post","JSON","stringify","patchTodo","_x4","_x5","_x6","_patchTodo","_callee3","todoId","updatedTodo","_context3","patch","deleteTodo","_x7","_x8","_deleteTodo","_callee4","_context4","delete","getUploadUrl","_x9","_x10","_getUploadUrl","_callee5","_context5","uploadUrl","uploadFile","_x11","_x12","_uploadFile","_callee6","file","_context6","put","EditTodo","_React$PureComponent","_getPrototypeOf2","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","undefined","uploadState","NoUpload","handleFileChange","event","files","target","setState","handleSubmit","_ref","asyncToGenerator","mark","preventDefault","setUploadState","FetchingPresignedUrl","props","auth","params","UploadingFile","t0","message","finish","inherits","createClass","key","value","react","Form","onSubmit","Field","type","accept","placeholder","onChange","renderButton","Button","loading","React","LogIn","onLogin","onClick","size","color","NotFound","Todos","newTodoName","loadingTodos","handleNameChange","onEditButtonClick","push","onTodoCreate","dueDate","calculateDueDate","name","toConsumableArray","onTodoDelete","_ref2","filter","todo","onTodoCheck","_ref3","pos","update","defineProperty","done","$set","_componentDidMount","Header","as","renderCreateTodoInput","renderTodos","Grid","Row","Column","width","Input","action","labelPosition","icon","fluid","actionPosition","Divider","renderLoading","renderTodosList","indeterminate","inline","padded","map","verticalAlign","Checkbox","checked","floated","Icon","attachmentUrl","Image","src","wrapped","date","setDate","getDate","dateFormat","App","handleLogin","assertThisInitialized","handleLogout","Segment","style","padding","vertical","container","stackable","react_router","generateMenu","generateCurrentPage","Menu","Item","react_router_dom","to","position","logInLogOutButton","path","exact","render","Todos_Todos","assign","EditTodo_EditTodo","component","LogIn_LogIn","Component","createHistory","ReactDOM","test","hash","components_Callback","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0cf3738f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// TODO: Once your application is deployed, copy an API id here so that the frontend could interact with it\nconst apiId = 'l9h5zc3ea3'\nexport const apiEndpoint = `https://${apiId}.execute-api.us-east-1.amazonaws.com/dev`\n\nexport const authConfig = {\n  // TODO: Create an Auth0 application and copy values from it into this map\n  domain: 'dev-t-ikyd9q.eu.auth0.com', // Auth0 domain\n  clientId: 'qKwsIARzGpKwEonmAaHsN3yjGIVZewtx', // Auth0 client id\n  callbackUrl: 'http://localhost:3000/callback'\n}\n","import auth0 from 'auth0-js';\nimport { authConfig } from '../config';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: authConfig.domain,\n    clientID: authConfig.clientId,\n    redirectUri: authConfig.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor(history) {\n    this.history = history\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        console.log('Access token: ', authResult.accessToken)\n        console.log('id token: ', authResult.idToken)\n        this.setSession(authResult);\n      } else if (err) {\n        this.history.replace('/');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nfunction Callback() {\n  return (\n    <Dimmer active>\n      <Loader content=\"Loading\" />\n    </Dimmer>\n  )\n}\n\nexport default Callback\n","import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport Auth from '../auth/Auth'\nimport { getUploadUrl, uploadFile } from '../api/todos-api'\n\nenum UploadState {\n  NoUpload,\n  FetchingPresignedUrl,\n  UploadingFile,\n}\n\ninterface EditTodoProps {\n  match: {\n    params: {\n      todoId: string\n    }\n  }\n  auth: Auth\n}\n\ninterface EditTodoState {\n  file: any\n  uploadState: UploadState\n}\n\nexport class EditTodo extends React.PureComponent<\n  EditTodoProps,\n  EditTodoState\n> {\n  state: EditTodoState = {\n    file: undefined,\n    uploadState: UploadState.NoUpload\n  }\n\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (!files) return\n\n    this.setState({\n      file: files[0]\n    })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    try {\n      if (!this.state.file) {\n        alert('File should be selected')\n        return\n      }\n\n      this.setUploadState(UploadState.FetchingPresignedUrl)\n      const uploadUrl = await getUploadUrl(this.props.auth.getIdToken(), this.props.match.params.todoId)\n\n      this.setUploadState(UploadState.UploadingFile)\n      await uploadFile(uploadUrl, this.state.file)\n\n      alert('File was uploaded!')\n    } catch (e) {\n      alert('Could not upload a file: ' + e.message)\n    } finally {\n      this.setUploadState(UploadState.NoUpload)\n    }\n  }\n\n  setUploadState(uploadState: UploadState) {\n    this.setState({\n      uploadState\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Upload new image</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>File</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              placeholder=\"Image to upload\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Field>\n\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n\n    return (\n      <div>\n        {this.state.uploadState === UploadState.FetchingPresignedUrl && <p>Uploading image metadata</p>}\n        {this.state.uploadState === UploadState.UploadingFile && <p>Uploading file</p>}\n        <Button\n          loading={this.state.uploadState !== UploadState.NoUpload}\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </div>\n    )\n  }\n}\n","import { apiEndpoint } from '../config'\nimport { Todo } from '../types/Todo'\nimport { CreateTodoRequest } from '../types/CreateTodoRequest'\nimport Axios from 'axios'\nimport { UpdateTodoRequest } from '../types/UpdateTodoRequest'\n\nexport async function getTodos(idToken: string): Promise<Todo[]> {\n  console.log('Fetching todos')\n\n  const response = await Axios.get(`${apiEndpoint}/todos`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${idToken}`\n    }\n  })\n  console.log('Todos:', response.data)\n  return response.data.todos // changed from .items to todos as my endpoint is .todos\n}\n\nexport async function createTodo(\n  idToken: string,\n  newTodo: CreateTodoRequest\n): Promise<Todo> {\n  const response = await Axios.post(\n    `${apiEndpoint}/todos`,\n    JSON.stringify(newTodo),\n    {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${idToken}`\n      }\n    }\n  )\n  return response.data // it already returns the item in object form\n}\n\nexport async function patchTodo(\n  idToken: string,\n  todoId: string,\n  updatedTodo: UpdateTodoRequest\n): Promise<void> {\n  await Axios.patch(\n    `${apiEndpoint}/todos/${todoId}`,\n    JSON.stringify(updatedTodo),\n    {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${idToken}`\n      }\n    }\n  )\n}\n\nexport async function deleteTodo(\n  idToken: string,\n  todoId: string\n): Promise<void> {\n  await Axios.delete(`${apiEndpoint}/todos/${todoId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function getUploadUrl(\n  idToken: string,\n  todoId: string\n): Promise<string> {\n  const response = await Axios.post(\n    `${apiEndpoint}/todos/${todoId}/attachment`,\n    '',\n    {\n      headers: {\n        'Content-Type': 'image/png',\n        Authorization: `Bearer ${idToken}`\n      }\n    }\n  )\n  return response.data.uploadUrl\n}\n\nexport async function uploadFile(\n  uploadUrl: string,\n  file: Buffer\n): Promise<void> {\n  await Axios.put(uploadUrl, file, {\n    headers: {\n      'Content-Type': 'image/png'\n    }\n  })\n}\n\n// Headers to put\n// , {\n//   headers: {\n//     'Content-Type': 'image/png'\n//   }\n// }\n","import * as React from 'react'\nimport Auth from '../auth/Auth'\nimport { Button } from 'semantic-ui-react'\n\ninterface LogInProps {\n  auth: Auth\n}\n\ninterface LogInState {}\n\nexport class LogIn extends React.PureComponent<LogInProps, LogInState> {\n  onLogin = () => {\n    this.props.auth.login()\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Please log in</h1>\n\n        <Button onClick={this.onLogin} size=\"huge\" color=\"olive\">\n          Log in\n        </Button>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\n\ninterface NotFoundProps {\n}\n\ninterface NotFoundState {\n}\n\nexport class NotFound extends React.PureComponent<NotFoundProps, NotFoundState> {\n  render() {\n    return <h1>Not Found</h1>\n  }\n}\n","import dateFormat from 'dateformat'\nimport { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader\n} from 'semantic-ui-react'\n\nimport { createTodo, deleteTodo, getTodos, patchTodo } from '../api/todos-api'\nimport Auth from '../auth/Auth'\nimport { Todo } from '../types/Todo'\n\ninterface TodosProps {\n  auth: Auth\n  history: History\n}\n\ninterface TodosState {\n  todos: Todo[]\n  newTodoName: string\n  loadingTodos: boolean\n}\n\nexport class Todos extends React.PureComponent<TodosProps, TodosState> {\n  state: TodosState = {\n    todos: [],\n    newTodoName: '',\n    loadingTodos: true\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newTodoName: event.target.value })\n  }\n\n  onEditButtonClick = (todoId: string) => {\n    this.props.history.push(`/todos/${todoId}/edit`)\n  }\n\n  onTodoCreate = async (event: React.ChangeEvent<HTMLButtonElement>) => {\n    try {\n      const dueDate = this.calculateDueDate()\n      const newTodo = await createTodo(this.props.auth.getIdToken(), {\n        name: this.state.newTodoName,\n        dueDate\n      })\n      this.setState({\n        todos: [...this.state.todos, newTodo],\n        newTodoName: ''\n      })\n    } catch {\n      alert('Todo creation failed')\n    }\n  }\n\n  onTodoDelete = async (todoId: string) => {\n    try {\n      await deleteTodo(this.props.auth.getIdToken(), todoId)\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.todoId != todoId)\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  onTodoCheck = async (pos: number) => {\n    try {\n      const todo = this.state.todos[pos]\n      this.setState({\n        todos: update(this.state.todos, {\n          [pos]: { done: { $set: !todo.done } }\n        })\n      })\n      await patchTodo(this.props.auth.getIdToken(), todo.todoId, {\n        name: todo.name,\n        dueDate: todo.dueDate,\n        done: !todo.done\n      })\n    } catch {\n      alert('Todo check failed') // Typo\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const todos = await getTodos(this.props.auth.getIdToken())\n      this.setState({\n        todos,\n        loadingTodos: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch todos: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header as=\"h1\">TODOs</Header>\n\n        {this.renderCreateTodoInput()}\n\n        {this.renderTodos()}\n      </div>\n    )\n  }\n\n  renderCreateTodoInput() {\n    return (\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <Input\n            action={{\n              color: 'teal',\n              labelPosition: 'left',\n              icon: 'add',\n              content: 'New task',\n              onClick: this.onTodoCreate\n            }}\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"To change the world...\"\n            onChange={this.handleNameChange}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Divider />\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  renderTodos() {\n    if (this.state.loadingTodos) {\n      return this.renderLoading()\n    }\n\n    return this.renderTodosList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading TODOs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  renderTodosList() {\n    return (\n      <Grid padded>\n        {this.state.todos.map((todo, pos) => {\n          return (\n            <Grid.Row key={todo.todoId}>\n              <Grid.Column width={1} verticalAlign=\"middle\">\n                <Checkbox\n                  onChange={() => this.onTodoCheck(pos)}\n                  checked={todo.done}\n                />\n              </Grid.Column>\n              <Grid.Column width={10} verticalAlign=\"middle\">\n                {todo.name}\n              </Grid.Column>\n              <Grid.Column width={3} floated=\"right\">\n                {todo.dueDate}\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"blue\"\n                  onClick={() => this.onEditButtonClick(todo.todoId)}\n                >\n                  <Icon name=\"pencil\" />\n                </Button>\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"red\"\n                  onClick={() => this.onTodoDelete(todo.todoId)}\n                >\n                  <Icon name=\"delete\" />\n                </Button>\n              </Grid.Column>\n              {todo.attachmentUrl && (\n                <Image src={todo.attachmentUrl} size=\"small\" wrapped />\n              )}\n              <Grid.Column width={16}>\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    )\n  }\n\n  calculateDueDate(): string {\n    const date = new Date()\n    date.setDate(date.getDate() + 7)\n\n    return dateFormat(date, 'yyyy-mm-dd') as string\n  }\n}\n","import React, { Component } from 'react'\nimport { Link, Route, Router, Switch } from 'react-router-dom'\nimport { Grid, Menu, Segment } from 'semantic-ui-react'\n\nimport Auth from './auth/Auth'\nimport { EditTodo } from './components/EditTodo'\nimport { LogIn } from './components/LogIn'\nimport { NotFound } from './components/NotFound'\nimport { Todos } from './components/Todos'\n\nexport interface AppProps {}\n\nexport interface AppProps {\n  auth: Auth\n  history: any\n}\n\nexport interface AppState {}\n\nexport default class App extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  handleLogin() {\n    this.props.auth.login()\n  }\n\n  handleLogout() {\n    this.props.auth.logout()\n  }\n\n  render() {\n    return (\n      <div>\n        <Segment style={{ padding: '8em 0em' }} vertical>\n          <Grid container stackable verticalAlign=\"middle\">\n            <Grid.Row>\n              <Grid.Column width={16}>\n                <Router history={this.props.history}>\n                  {this.generateMenu()}\n\n                  {this.generateCurrentPage()}\n                </Router>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </div>\n    )\n  }\n\n  generateMenu() {\n    return (\n      <Menu>\n        <Menu.Item name=\"home\">\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n\n        <Menu.Menu position=\"right\">{this.logInLogOutButton()}</Menu.Menu>\n      </Menu>\n    )\n  }\n\n  logInLogOutButton() {\n    if (this.props.auth.isAuthenticated()) {\n      return (\n        <Menu.Item name=\"logout\" onClick={this.handleLogout}>\n          Log Out\n        </Menu.Item>\n      )\n    } else {\n      return (\n        <Menu.Item name=\"login\" onClick={this.handleLogin}>\n          Log In\n        </Menu.Item>\n      )\n    }\n  }\n\n  generateCurrentPage() {\n    if (!this.props.auth.isAuthenticated()) {\n      return <LogIn auth={this.props.auth} />\n    }\n\n    return (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => {\n            return <Todos {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route\n          path=\"/todos/:todoId/edit\"\n          exact\n          render={props => {\n            return <EditTodo {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React from 'react'\nimport Auth from './auth/Auth'\nimport { Router, Route } from 'react-router-dom'\nimport Callback from './components/Callback'\nimport createHistory from 'history/createBrowserHistory'\nimport App from './App';\nconst history = createHistory()\n\nconst auth = new Auth(history)\n\nconst handleAuthentication = (props: any) => {\n  const location = props.location\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication()\n  }\n}\n\nexport const makeAuthRouting = () => {\n  return (\n    <Router history={history}>\n      <div>\n        <Route\n          path=\"/callback\"\n          render={props => {\n            handleAuthentication(props)\n            return <Callback />\n          }}\n        />\n        <Route\n          render={props => {\n            return <App auth={auth} {...props} />\n          }}\n        />\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeAuthRouting } from './routing';\n\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}